/// <reference types="node" />
/**
 * @module botframework-streaming
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { IBrowserWebSocket, ISocket } from '../interfaces';
export declare class BrowserWebSocket implements ISocket {
    private webSocket;
    /**
     * Creates a new instance of the [BrowserWebSocket](xref:botframework-streaming.BrowserWebSocket) class.
     *
     * @param socket The socket object to build this connection on.
     */
    constructor(socket?: IBrowserWebSocket);
    /**
     * Connects to the supporting socket using WebSocket protocol.
     *
     * @param serverAddress The address the server is listening on.
     */
    connect(serverAddress: string): Promise<void>;
    /**
     * True if the socket is currently connected.
     */
    readonly isConnected: boolean;
    /**
     * Writes a buffer to the socket and sends it.
     *
     * @param buffer The buffer of data to send across the connection.
     */
    write(buffer: Buffer): void;
    /**
     * Close the socket.
     */
    close(): void;
    /**
     * Set the handler for text and binary messages received on the socket.
     */
    setOnMessageHandler(handler: (x: any) => void): void;
    /**
     * Set the callback to call when encountering errors.
     */
    setOnErrorHandler(handler: (x: any) => void): void;
    /**
     * Set the callback to call when encountering socket closures.
     */
    setOnCloseHandler(handler: (x: any) => void): void;
}
