/**
 * -------------------------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.
 * See License in the project root for license information.
 * -------------------------------------------------------------------------------------------
 */
import * as tslib_1 from "tslib";
/**
 * @class
 * Class representing HTTPClient
 */
export class HTTPClient {
    /**
     * @public
     * @constructor
     * Creates an instance of a HTTPClient
     * @param {Middleware} middleware - The first middleware of the middleware chain
     */
    constructor(middleware) {
        this.middleware = middleware;
    }
    /**
     * @public
     * @async
     * To send the request through the middleware chain
     * @param {Context} context - The context of a request
     * @returns A promise that resolves to the Context
     */
    sendRequest(context) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            try {
                if (typeof context.request === "string" && context.options === undefined) {
                    const error = new Error();
                    error.name = "InvalidRequestOptions";
                    error.message = "Unable to execute the middleware, Please provide valid options for a request";
                    throw error;
                }
                yield this.middleware.execute(context);
                return context;
            }
            catch (error) {
                throw error;
            }
        });
    }
}
//# sourceMappingURL=HTTPClient.js.map