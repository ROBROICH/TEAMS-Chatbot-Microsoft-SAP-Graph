export declare namespace JapaneseNumeric {
    const LangMarker = "";
    const DecimalSeparatorChar = ".";
    const FractionMarkerToken = "";
    const NonDecimalSeparatorChar = " ";
    const HalfADozenText = "";
    const WordSeparatorToken = "";
    const RoundNumberMap: ReadonlyMap<string, number>;
    const RoundNumberMapChar: ReadonlyMap<string, number>;
    const ZeroToNineMap: ReadonlyMap<string, number>;
    const FullToHalfMap: ReadonlyMap<string, string>;
    const UnitMap: ReadonlyMap<string, string>;
    const RoundDirectList: string[];
    const DigitalNumberRegex = "((?<=(\\d|\\b))(k|t|m|g)(?=\\b))";
    const ZeroToNineFullHalfRegex = "[\\d１２３４５６７８９０]";
    const DigitNumRegex: string;
    const DozenRegex = ".*ダース$";
    const PercentageRegex = ".+(?=パ\\s*ー\\s*セ\\s*ン\\s*ト)|.*(?=[％%])";
    const DoubleAndRoundRegex: string;
    const FracSplitRegex = "[はと]|分\\s*の";
    const ZeroToNineIntegerRegex = "[一二三四五六七八九]";
    const NegativeNumberTermsRegex = "(マ\\s*イ\\s*ナ\\s*ス)";
    const NegativeNumberTermsRegexNum = "(?<!(\\d+\\s*)|[-－])[-－]";
    const NegativeNumberSignRegex: string;
    const SpeGetNumberRegex: string;
    const PairRegex = ".*[対膳足]$";
    const RoundNumberIntegerRegex = "[十百千万億兆]";
    const WhiteListRegex = "(。|，|、|（|）|”｜国|週間|時間|時|匹|キロ|トン|年|個|足|本|\\s|$)";
    const NotSingleRegex: string;
    const SingleRegex: string;
    const AllIntRegex: string;
    const NumbersSpecialsChars: string;
    const NumbersSpecialsCharsWithSuffix: string;
    const DottedNumbersSpecialsChar: string;
    const NumbersWithHalfDozen: string;
    const NumbersWithDozen: string;
    const PointRegexStr = "[\\.．]";
    const AllFloatRegex: string;
    const NumbersWithAllowListRegex: string;
    const NumbersAggressiveRegex: string;
    const PointRegex: string;
    const DoubleSpecialsChars: string;
    const DoubleSpecialsCharsWithNegatives: string;
    const SimpleDoubleSpecialsChars: string;
    const DoubleWithMultiplierRegex: string;
    const DoubleWithThousandsRegex: string;
    const DoubleAllFloatRegex: string;
    const DoubleExponentialNotationRegex: string;
    const DoubleScientificNotationRegex: string;
    const OrdinalRegex: string;
    const OrdinalNumbersRegex: string;
    const AllFractionNumber: string;
    const FractionNotationSpecialsCharsRegex: string;
    const FractionNotationRegex: string;
    const PercentagePointRegex: string;
    const SimplePercentageRegex: string;
    const NumbersPercentagePointRegex: string;
    const NumbersPercentageWithSeparatorRegex: string;
    const NumbersPercentageWithMultiplierRegex: string;
    const FractionPercentagePointRegex: string;
    const FractionPercentageWithSeparatorRegex: string;
    const FractionPercentageWithMultiplierRegex: string;
    const SimpleNumbersPercentageRegex: string;
    const SimpleNumbersPercentageWithMultiplierRegex: string;
    const SimpleNumbersPercentagePointRegex: string;
    const IntegerPercentageRegex: string;
    const IntegerPercentageWithMultiplierRegex: string;
    const NumbersFractionPercentageRegex: string;
    const SimpleIntegerPercentageRegex: string;
    const NumbersFoldsPercentageRegex: string;
    const FoldsPercentageRegex: string;
    const SimpleFoldsPercentageRegex: string;
    const SpecialsPercentageRegex: string;
    const NumbersSpecialsPercentageRegex: string;
    const SimpleSpecialsPercentageRegex: string;
    const SpecialsFoldsPercentageRegex = "半\\s*分|(?<=ダース)";
    const TillRegex = "(から|--|-|—|——|~)";
    const MoreRegex = "(大なり|大きい|高い|大きく|>)";
    const LessRegex = "(小なり|小さい|低い|<)";
    const EqualRegex = "(等しい|イコール|=)";
    const MoreOrEqual = "((大なりかイコール)|(大きいかイコール)|(大なりか等しい)|(大きいか等しい)|小さくない|以上|最低)";
    const MoreOrEqualSuffix = "(より(大なりイコール|小さくない))";
    const LessOrEqual: string;
    const LessOrEqualSuffix = "(小なりイコール|大さくない)";
    const OneNumberRangeMoreRegex1: string;
    const OneNumberRangeMoreRegex2 = "(?<number1>((?!((，|、(?!\\d+))|(,|、(?!\\d+))|。)).)+)\\s*(より)?(大なり)";
    const OneNumberRangeMoreRegex3 = "(?<number1>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(以上|最低)(?![万億]{1,2})";
    const OneNumberRangeMoreRegex4: string;
    const OneNumberRangeMoreSeparateRegex = "^[.]";
    const OneNumberRangeLessSeparateRegex = "^[.]";
    const OneNumberRangeLessRegex1: string;
    const OneNumberRangeLessRegex2 = "(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(より)?(小な)";
    const OneNumberRangeLessRegex3 = "(?<number2>((?!((，(?!\\d+))|(,(?!\\d+))|。)).)+)\\s*(以下|未満)(?![万億]{1,2})";
    const OneNumberRangeLessRegex4: string;
    const OneNumberRangeEqualRegex: string;
    const TwoNumberRangeRegex1: string;
    const TwoNumberRangeRegex2: string;
    const TwoNumberRangeRegex3: string;
    const TwoNumberRangeRegex4: string;
    const AmbiguousFractionConnectorsRegex = "^[.]";
}
